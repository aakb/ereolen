<?php

/**
 * @file
 * This module is used to make alterations that is not possible to do form
 * inside the theme. Such as chaning cacheing header etc.
 *
 */

/**
 * Set max-age for pages that are cacheable, when not in external cache
 * mode. This allows us to cache pages in varnish at the same time use
 * Drupal pages cache for https requests.
 */
function ereolen_admin_init(){
  $cache_mode = variable_get('cache', CACHE_DISABLED);
  if (drupal_page_is_cacheable() && $cache_mode != CACHE_EXTERNAL) {
    $max_age = variable_get('page_cache_max_age', 0);
    drupal_set_header('Cache-Control', 'public, max-age=' . $max_age);
  }
}

/**
 * Implments hook_ting_client_request_alter().
 *
 * Make sure that we get all relations and that we only get valided e-books.
 */
function ereolen_admin_ting_client_request_alter(&$request) {
  if (is_a($request, 'TingClientSearchRequest')) {
    $request->setQuery('( ' . $request->getQuery() . ' ) AND (dc.identifier=978*)');
    $request->setAllRelations(TRUE);
    $request->setRelationData('full');
  }
}

/**
 * Implments hook_ting_client_reponse_alter().
 *
 * Get publisher description for the object being viewed. A better solution
 * would be to modify the ting client to enrich the object with relations. But
 * to use a clean client we load it in this alter function.
 */
function ereolen_admin_ting_client_response_alter(&$reponse) {
  if (is_a($reponse, 'TingClientObject')) {
    $reponse->publisherDescription = ereolen_admin_get_relations($reponse);
  }
  if (is_a($reponse, 'TingClientSearchResult') && $reponse->numTotalObjects > 0) {
    foreach ($reponse->collections as &$collection) {
      foreach ($collection->objects as &$object) {
        $object->publisherDescription = ereolen_admin_get_relations($object);
      }
    }
  }
}

function ereolen_admin_get_relations(TingClientObject $object) {
  if (!empty($object->relationsData)) {
    foreach ($object->relationsData as $relation) {
      if ($relation->relationType == 'dbcaddi:hasDescriptionFromPublisher') {
        $request = ting_get_request_factory()->getObjectRequest();
        $request->setObjectId($relation->relationUri);
        $request->setProfile(variable_get('ting_profile', 'opac'));
        $request->setFormat('docbook');
        $request->setObjectFormat('docbook');
        $request->setOutputType('xml');
        $xml_string = ting_execute($request);

        // Get docbook description from publisher and store it in the
        // response.
        $xml = simplexml_load_string($xml_string);
        $xml_object = $xml->result->searchResult->collection->object;
        $namespaces = $xml_object->getNameSpaces(true);
        $docbook = $xml_object->children($namespaces['docbook']);
        $description = (string)$docbook->article->section->para;

        // Make some filtering to make the description usable.
        return _filter_autop($description);

        /**
          * @TODO: Cache the result as it almost never changes.
          */
      }
    }
  }

  return NULL;
}
